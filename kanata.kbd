;; -*- mode: lisp -*-

;; defsrc is still necessary


(defcfg
  process-unmapped-keys yes
  movemouse-inherit-accel-state yes
  concurrent-tap-hold yes
  )

;; (defsrc
;;     grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
;;     tab  q w e r t y u i o p [ ] \
;;     caps a s d f g h j k l ; ' ret
;;     lsft z x c v b n m , . / rsft
;;     spc
;;     )

(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

(defvar
  tap-time 250
  hold-time 250
)


(defalias
  ec ( multi f24 (tap-hold $tap-time $hold-time (multi caps (layer-switch dir)) (layer-while-held dir)))
  a (multi f24 (tap-hold $tap-time $hold-time a lmet))
  s (multi f24 (tap-hold $tap-time $hold-time s lalt))
  d (multi f24 (tap-hold $tap-time $hold-time d lsft))
  f (multi f24 (tap-hold $tap-time $hold-time f lctl))
  g (multi f24 (tap-hold $tap-time $hold-time g (layer-while-held dir)))
  h (multi f24 (tap-hold $tap-time $hold-time h (layer-while-held dir)))
  j (multi f24 (tap-hold $tap-time $hold-time j rctl))
  k (multi f24 (tap-hold $tap-time $hold-time k rsft))
  l (multi f24 (tap-hold $tap-time $hold-time l ralt))
  ; (multi f24 (tap-hold $tap-time $hold-time ; rmet))
  sptog (multi f24 (tap-hold $tap-time $hold-time spc (layer-toggle redmove)))
  retog (multi f24 (tap-hold $tap-time $hold-time ret (layer-toggle sym)))
  )

(defalias
  tg (multi f24 (tap-hold $tap-time $hold-time tab lmet))
  [alt (multi f24 (tap-hold $tap-time $hold-time [ lalt))
  ]sft (multi f24 (tap-hold $tap-time $hold-time ] lsft))
  bspctl (multi f24 (tap-hold $tap-time $hold-time bspc lctl))
  retctl (multi f24 (tap-hold $tap-time $hold-time ret rctl))
  {sft (multi f24 (tap-hold $tap-time $hold-time S-[ rsft))
  }alt (multi f24 (tap-hold $tap-time $hold-time S-] ralt))
  tr (multi f24 (tap-hold $tap-time $hold-time tab rmet))
  plus S-=
  )

(deflayer base
  grv  1    2    3    4    5    6    7    8    9    0    -    =  @bspctl
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  @ec  @a   @s   @d   @f   g   @h   @j   @k   @l   @;    '    @retog
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           @sptog            ralt rmet rctl
)

(deflayer redmove
  grv  f1    f2    f3    f4    f5    f6    f7    f8    f9    f10    f11   f12 @bspctl
  lrld   1   2    3    4    5    6    7     8    9    0    [    ]    \
    _   @tg @[alt @]sft @bspctl S-9 S-0 @retctl @{sft @}alt  @tr   `    @retog
  lsft    `     =     -      del  esc S-\   \   @plus S-- S-`  rsft
  lctl lmet lalt           _            ralt rmet rctl
    )

(defvar
  mm-interval 10
  mm-distance 2
  accel-time 1000
  mm-mindist 1
  mm-maxdist 50
  )

(defalias
  mwu (mwheel-up 50 120)
  mwd (mwheel-down 50 120)
  mwl (mwheel-left 50 120)
  mwr (mwheel-right 50 120)

  ms↑ (movemouse-up $mm-interval $mm-distance)
  ms← (movemouse-left $mm-interval $mm-distance)
  ms↓ (movemouse-down $mm-interval $mm-distance)
  ms→ (movemouse-right $mm-interval $mm-distance)

  ma↑ (movemouse-accel-up $mm-interval $accel-time $mm-mindist $mm-maxdist)
  ma← (movemouse-accel-left $mm-interval $accel-time $mm-mindist $mm-maxdist)
  ma↓ (movemouse-accel-down $mm-interval $accel-time $mm-mindist $mm-maxdist)
  ma→ (movemouse-accel-right $mm-interval $accel-time $mm-mindist $mm-maxdist)

  sm (setmouse 32228 32228)
  eb ( multi f24 (tap-hold $tap-time $hold-time (multi caps (layer-switch base)) (layer-while-held base)))

  fst (movemouse-speed 500)
  slw (movemouse-speed 1)
  )

(deflayer dir
    grv  S-1  S-2  S-3  S-4  S-5  S-6  S-7  S-8   S-9   S-0   -    =    @bspctl
    mltp @ma←  @ma↑ @ma↓ @ma→  mrtp mftp  mlft mmid mrgt   _  ∅    ∅    ∅
    @eb  lmet lalt lsft lctl  mmtp   ◀   ▼    ▲    ▶  @mwd  @mwu  @retog
    lsft  @mwl @mwu @mwd @mwr  mbtp   ⇤   ⇟   ⇞   ⇥   mrgt  @fst
    lctl lmet lalt          @sptog           ralt rmet rctl
)

(defalias
  s1 (multi f24 (tap-hold $tap-time $hold-time S-1 lmet))
  s2 (multi f24 (tap-hold $tap-time $hold-time S-2 lalt))
  s3 (multi f24 (tap-hold $tap-time $hold-time S-3 lsft))
  s4 (multi f24 (tap-hold $tap-time $hold-time S-4 lctl))
  s5 (multi f24 (tap-hold $tap-time $hold-time S-5 (layer-while-held dir)))
  s6 (multi f24 (tap-hold $tap-time $hold-time S-6 (layer-while-held dir)))
  s7 (multi f24 (tap-hold $tap-time $hold-time S-7 rctl))
  s8 (multi f24 (tap-hold $tap-time $hold-time S-8 rsft))
  s9 (multi f24 (tap-hold $tap-time $hold-time S-9 ralt))
  s0 (multi f24 (tap-hold $tap-time $hold-time S-0 rmet))
  )

(deflayer sym
  grv   1    2    3    4    5    6    7    8    9    0    -    =  @bspctl
  tab  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10    [    ]    \
  _   @s1  @s2  @s3  @s4  @s5  @s6  @s7  @s8  @s9  @s0   '    @retog
  lsft [    ]   S-[  S-]  esc   S-- @plus -    =     `    rsft
  lctl lmet lalt           @sptog            ralt rmet rctl
)

(deflayer mom
    grv  1    2    3    4    5    6    7    8    9    0    -    =    @bspctl
    tab  mmid @ma↑ mmid mrgt @ma→    ∅     ⇤    ⇥    @mwd  @mwu   ∅    ∅    ∅
    @eb   @ma← @ma↓ @ma→  mlft mrgt  ∅  rctl rsft ralt rmet  @mwu  @retog
    lsft   @mwl @mwd @mwu @mwr   ∅     ⇞    ⇟  mlft mmid mrgt  @fst
    lctl lmet lalt          @sptog           ralt rmet rctl
)
